{"version":3,"file":"index.js","sources":["../src/attribute/schema.js","../src/attribute/factoryFor.js","../src/attribute/types/color.js","../src/attribute/types/fontFamily.js","../src/attribute/types/fontSize.js","../src/attribute/types/fontFace.js","../src/attribute/types/fontWeight.js","../src/attribute/types/lineHeight.js","../src/attribute/types/spacing.js","../src/attribute/types/swatch.js","../src/unit/schema.js","../src/unit/factoryFor.js","../src/unit/types/factor.js","../src/unit/types/hex.js","../src/unit/types/hexa.js","../src/unit/types/px.js","../src/unit/types/reference.js","../src/unit/types/rem.js","../src/unit/types/rgb.js","../src/unit/types/rgba.js","../src/unit/types/string.js","../src/unit/index.js","../src/attribute/types/baseSpacing.js","../src/attribute/types/baseLineHeight.js","../src/attribute/types/baseFontSize.js","../src/attribute/index.js","../src/setting/schema.js","../src/setting/types/base.js","../src/setting/factoryFor.js","../src/setting/index.js","../src/base/schema.js","../src/base/types/base.js","../src/base/factoryFor.js","../src/base/index.js","../src/theme/schema.js","../src/theme/types/base.js","../src/theme/factoryFor.js","../src/theme/index.js"],"sourcesContent":["import { _ROOT_ATTRIBUTE_ } from '@airtheme/core'\n\n// Attribute\n// object for a theme attribute, has many units\n\nexport default {\n  // content\n  // Object : reference/val store for settings. User selected.\n\n  content: [],\n\n  // view\n  // The unit the content items are displayed. User selected.\n\n  view: null,\n\n  // viewable\n  // Array : Units this object can serialize to.\n\n  viewable: [],\n\n  // reference\n  // A string namespace global reference\n\n  reference: null,\n\n  // object\n  // The name of the object. The same as the 'class'\n\n  object: _ROOT_ATTRIBUTE_,\n\n  // unit\n  // The unit the content items are stored. Static.\n\n  unit: null\n}\n","// prettier-ignore\nexport const factoryFor = (\n  {\n    object,\n    view,\n    unit,\n    viewable,\n    reference,\n    content\n  } = {},\n  schema = {}\n) => ({\n  view: factoryDisplay,\n  content: factoryContent\n} = {}) =>\n  Object.assign(\n    {},\n    schema,\n    {\n      object: object || schema.object,\n      view: factoryDisplay || view || schema.view,\n      unit: unit || schema.unit,\n      viewable: viewable || schema.viewable,\n      reference: reference || schema.reference,\n      content: factoryContent || content || schema.content\n    }\n  )\n\nexport default factoryFor\n","import { COLOR, SWATCH } from '@airtheme/core'\nimport { REFERENCE, HEX, HEXA, RGB, RGBA } from '@airtheme/core'\n\nexport default {\n  view: REFERENCE,\n  viewable: [REFERENCE, HEX, HEXA, RGB, RGBA],\n  reference: SWATCH,\n  object: COLOR,\n  unit: REFERENCE\n}\n","import { FONT_FAMILY, FONT_FACE } from '@airtheme/core'\nimport { REFERENCE, STRING } from '@airtheme/core'\n\nexport default {\n  view: REFERENCE,\n  viewable: [REFERENCE, STRING],\n  reference: FONT_FACE,\n  object: FONT_FAMILY,\n  unit: REFERENCE\n}\n","import { FONT_SIZE } from '@airtheme/core'\nimport { FACTOR, PX, REM } from '@airtheme/core'\nimport { BASE_FONT_SIZE_KEY } from '@airtheme/core'\n\nexport default {\n  view: FACTOR,\n  viewable: [FACTOR, PX, REM],\n  reference: BASE_FONT_SIZE_KEY,\n  object: FONT_SIZE,\n  unit: FACTOR\n}\n","import { FONT_FACE, STRING } from '@airtheme/core'\n\nexport default {\n  view: STRING,\n  viewable: [STRING],\n  reference: null,\n  object: FONT_FACE,\n  unit: STRING\n}\n","import { FONT_WEIGHT } from '@airtheme/core'\nimport { STRING } from '@airtheme/core'\n\nexport default {\n  view: STRING,\n  viewable: [STRING],\n  reference: null,\n  object: FONT_WEIGHT,\n  unit: STRING\n}\n","import { LINE_HEIGHT } from '@airtheme/core'\nimport { FACTOR, PX } from '@airtheme/core'\nimport { BASE_FONT_SIZE_KEY } from '@airtheme/core'\n\nexport default {\n  view: FACTOR,\n  viewable: [FACTOR, PX],\n  reference: BASE_FONT_SIZE_KEY,\n  object: LINE_HEIGHT,\n  unit: FACTOR\n}\n","import { SPACING } from '@airtheme/core'\nimport { FACTOR, PX } from '@airtheme/core'\nimport { BASE_SPACING_KEY } from '@airtheme/core'\n\nexport default {\n  view: FACTOR,\n  viewable: [FACTOR, PX],\n  reference: BASE_SPACING_KEY,\n  object: SPACING,\n  unit: FACTOR\n}\n","import { SWATCH } from '@airtheme/core'\nimport { HEX, HEXA, RGB, RGBA } from '@airtheme/core'\n\nexport default {\n  view: HEXA,\n  viewable: [HEX, HEXA, RGB, RGBA],\n  reference: null,\n  object: SWATCH,\n  unit: HEXA,\n  content: []\n}\n","import { _ROOT_UNIT_ } from '@airtheme/core'\n\n// unit\n// A typed unit for communicating css units\n\nexport default {\n  // name\n  // string : the friendly name\n\n  name: null,\n\n  // ordinal\n  // int : the stack order index\n\n  ordinal: null,\n\n  // object\n  // string : The name of the unit.\n\n  object: _ROOT_UNIT_,\n\n  // value\n  // Any : The value of the unit\n\n  value: null\n}\n","// createFactoryFor\n// Accepts a unit object and root schema\n// returns a function used to create new unit instances\n\n// prettier-ignore\nconst factoryFor =\n  ({ object } = {}, schema) =>\n  ({ value, name, ordinal } = {}) =>\n    Object.assign(\n      {},\n      schema,\n      { object },\n      {\n        value: value || schema.value,\n        name: name || schema.name,\n        ordinal: ordinal || schema.ordinal\n      }\n    )\n\nexport default factoryFor\n","import { FACTOR } from '@airtheme/core'\n\n// factor (string)\n// a relative unit multiplied by a reference\n\nexport default { object: FACTOR }\n","import { HEX } from '@airtheme/core'\n\n// hex (string)\n// a hexidecimal color value\n\nexport default { object: HEX }\n","import { HEXA } from '@airtheme/core'\n\n// hexa (string)\n// A hex value follow by an alpha valu '#000000,0.5'\n// NOTE: Units are serialized to the smallest css var that expresses\n\nexport default { object: HEXA }\n","import { PX } from '@airtheme/core'\n\n// px (int)\n// a px unit\n\nexport default { object: PX }\n","import { REFERENCE } from '@airtheme/core'\n\n// reference (string)\n// a string path of a theme global\n\nexport default { object: REFERENCE }\n","import { REM } from '@airtheme/core'\n\n// rem (int)\n// a css rem unit\n\nexport default { object: REM }\n","import { RGB } from '@airtheme/core'\n\n// rgb (string)\n// a rgb color value: '0,0,0'\n\nexport default { object: RGB }\n","import { RGBA } from '@airtheme/core'\n\n// rgba (string)\n// a rgba color value '0,0,0,0'\n\nexport default { object: RGBA }\n","import { STRING } from '@airtheme/core'\n\n// string (string)\n// a non transformable value\n\nexport default { object: STRING }\n","import schema from './schema'\nimport factoryFor from './factoryFor'\nimport factor from './types/factor'\nimport hex from './types/hex'\nimport hexa from './types/hexa'\nimport px from './types/px'\nimport reference from './types/reference'\nimport rem from './types/rem'\nimport rgb from './types/rgb'\nimport rgba from './types/rgba'\nimport string from './types/string'\n\nconst unit = {\n  factor: factoryFor(factor, schema),\n  hex: factoryFor(hex, schema),\n  hexa: factoryFor(hexa, schema),\n  px: factoryFor(px, schema),\n  reference: factoryFor(reference, schema),\n  rem: factoryFor(rem, schema),\n  rgb: factoryFor(rgb, schema),\n  rgba: factoryFor(rgba, schema),\n  string: factoryFor(string, schema)\n}\n\nexport default unit\n","import { BASE_SPACING, PX } from '@airtheme/core'\nimport unit from '../../unit'\n\nexport default {\n  view: PX,\n  viewable: [PX],\n  reference: null,\n  object: BASE_SPACING,\n  unit: PX,\n  content: unit.px({ name: 'baseSpacing', value: 16 })\n}\n","import {\n  BASE_LINE_HEIGHT,\n  BASE_FONT_SIZE_PATH,\n  PX,\n  FACTOR\n} from '@airtheme/core'\nimport unit from '../../unit'\n\nexport default {\n  view: PX,\n  viewable: [FACTOR, PX],\n  reference: BASE_FONT_SIZE_PATH,\n  object: BASE_LINE_HEIGHT,\n  unit: FACTOR,\n  content: unit.factor({ name: 'baseLineHeight', value: 1.15 })\n}\n","import { BASE_FONT_SIZE, PX } from '@airtheme/core'\nimport unit from '../../unit'\n\nexport default {\n  view: PX,\n  viewable: [PX],\n  reference: null,\n  object: BASE_FONT_SIZE,\n  unit: PX,\n  content: unit.px({ name: 'baseFontSize', value: 16 })\n}\n","import schema from './schema'\nimport factoryFor from './factoryFor'\nimport color from './types/color'\nimport fontFamily from './types/fontFamily'\nimport fontSize from './types/fontSize'\nimport fontFace from './types/fontFace'\nimport fontWeight from './types/fontWeight'\nimport lineHeight from './types/lineHeight'\nimport spacing from './types/spacing'\nimport swatch from './types/swatch'\nimport baseSpacing from './types/baseSpacing'\nimport baseLineHeight from './types/baseLineHeight'\nimport baseFontSize from './types/baseFontSize'\n\nconst attribute = {\n  baseFontSize: factoryFor(baseFontSize, schema),\n  baseSpacing: factoryFor(baseSpacing, schema),\n  baseLineHeight: factoryFor(baseLineHeight, schema),\n  color: factoryFor(color, schema),\n  fontFamily: factoryFor(fontFamily, schema),\n  fontSize: factoryFor(fontSize, schema),\n  fontWeight: factoryFor(fontWeight, schema),\n  lineHeight: factoryFor(lineHeight, schema),\n  fontFace: factoryFor(fontFace, schema),\n  fontFamily: factoryFor(fontFamily, schema),\n  spacing: factoryFor(spacing, schema),\n  swatch: factoryFor(swatch, schema)\n}\n\nexport default attribute\n","import attribute from '../attribute'\nimport {\n  COLOR_KEY,\n  FONT_FAMILY_KEY,\n  FONT_SIZE_KEY,\n  FONT_WEIGHT_KEY,\n  SPACING_KEY,\n  _THEME_SETTING_\n} from '@airtheme/core'\n\n// setting\n// Settings hash\n\nexport default {\n  object: _THEME_SETTING_,\n  [COLOR_KEY]: {},\n  [FONT_FAMILY_KEY]: {},\n  [FONT_SIZE_KEY]: {},\n  [FONT_WEIGHT_KEY]: {},\n  [SPACING_KEY]: {}\n}\n","import attribute from '../../attribute'\nimport {\n  COLOR_KEY,\n  FONT_FAMILY_KEY,\n  FONT_SIZE_KEY,\n  FONT_WEIGHT_KEY,\n  SPACING_KEY\n} from '@airtheme/core'\n\n// base\n// The base setting object\n\nexport default {\n  [COLOR_KEY]: attribute.color(),\n  [FONT_FAMILY_KEY]: attribute.fontFamily(),\n  [FONT_SIZE_KEY]: attribute.fontSize(),\n  [FONT_WEIGHT_KEY]: attribute.fontWeight(),\n  [SPACING_KEY]: attribute.spacing()\n}\n","// prettier-ignore\nexport const factoryFor = ({\n  color,\n  fontFamily,\n  fontSize,\n  fontWeight,\n  spacing\n} = {}, schema) => ({\n  color: instanceColor,\n  fontFamily: instanceFontFamily,\n  fontSize: instanceFontSize,\n  fontWeight: instanceFontWeight,\n  spacing: instanceSpacing\n} = {}) => Object.assign({}, schema, {\n  color: instanceColor || color || schema.color,\n  fontFamily: instanceFontFamily || fontFamily || schema.fontFamily,\n  fontSize: instanceFontSize || fontSize || schema.fontSize,\n  fontWeight: instanceFontWeight || fontWeight || schema.fontWeight,\n  spacing: instanceSpacing || spacing || schema.spacing\n})\n\nexport default factoryFor\n","import schema from './schema'\nimport base from './types/base'\nimport factoryFor from './factoryFor'\n\nconst setting = {\n  base: factoryFor(base, schema)\n}\n\nexport default setting\n","import attribute from '../attribute'\nimport {\n  BASE_FONT_SIZE_KEY,\n  BASE_LINE_HEIGHT_KEY,\n  BASE_SPACING_KEY,\n  _THEME_BASE_\n} from '@airtheme/core'\n\n// setting\n// Settings hash\n\nexport default {\n  object: _THEME_BASE_,\n  [BASE_FONT_SIZE_KEY]: {},\n  [BASE_LINE_HEIGHT_KEY]: {},\n  [BASE_SPACING_KEY]: {}\n}\n","import attribute from '../../attribute'\nimport unit from '../../unit'\nimport {\n  BASE_FONT_SIZE_KEY,\n  BASE_LINE_HEIGHT_KEY,\n  BASE_SPACING_KEY\n} from '@airtheme/core'\n\n// Root\n// Root hash\n\nexport default {\n  [BASE_FONT_SIZE_KEY]: attribute.baseFontSize(),\n  [BASE_LINE_HEIGHT_KEY]: attribute.baseLineHeight(),\n  [BASE_SPACING_KEY]: attribute.baseSpacing()\n}\n","import {\n  BASE_FONT_SIZE_KEY,\n  BASE_LINE_HEIGHT_KEY,\n  BASE_SPACING_KEY\n} from '@airtheme/core'\n\n// prettier-ignore\nexport const factoryFor = ({\n  baseFontSize,\n  baseSpacing,\n  baseLineHeight,\n} = {}, schema) => ({\n  baseFontSize: instanceBaseFontSize,\n  baseSpacing: instanceBaseSpacing,\n  baseLineHeight: instanceBaseLineHeight,\n} = {}) => Object.assign({}, schema, {\n  baseFontSize: instanceBaseFontSize || baseFontSize || schema.baseFontSize,\n  baseSpacing: instanceBaseSpacing || baseSpacing || schema.baseSpacing,\n  baseLineHeight: instanceBaseLineHeight || baseLineHeight || schema.baseLineHeight\n})\n\nexport default factoryFor\n","import schema from './schema'\nimport base from './types/base'\nimport factoryFor from './factoryFor'\n\nconst root = {\n  base: factoryFor(base, schema)\n}\n\nexport default root\n","import { _ROOT_THEME_ } from '@airtheme/core'\nimport { VERSION, uuid } from '@airtheme/core'\nimport attribute from '../attribute'\nimport setting from '../setting'\nimport base from '../base'\n\n// theme\n// The container object\n\nexport default {\n  // name\n  // Friendly name of the theme\n\n  name: null,\n\n  // id\n  // you know, the id\n\n  id: uuid(),\n\n  // baseFontSize\n  // string : the reference of the unit\n\n  baseFontSize: 16,\n\n  // baseLineHeight\n  // string : the reference of the unit\n\n  baseLineHeight: 1.15,\n\n  // baseSpacing\n  // string : the reference of the unit\n\n  baseSpacing: 16,\n\n  // object\n  // string : The name of the unit.\n\n  object: _ROOT_THEME_,\n\n  // version\n  // string : the version of the airthemek\n\n  version: VERSION,\n\n  // swatch\n  // Swatch : Swatch attribute object\n  swatch: attribute.swatch(),\n\n  // fontFace\n  // FontFace : fontFace attribute object\n  fontFace: attribute.fontFace(),\n\n  // root\n  // Root : Keyed object of root attribute types\n\n  base: base.base(),\n\n  // setting\n  // Setting : Keyed object of attribute types\n\n  setting: setting.base()\n}\n","import { BASIC, VERSION } from '@airtheme/core'\n\n// base\n// The container object\n\nexport default {\n  name: 'Basic Airtheme',\n  object: BASIC,\n  baseFontSize: 16,\n  baseLineHeight: 16,\n  baseSpacing: 16,\n  version: VERSION\n}\n","const factoryFor = (\n  {\n    name,\n    id,\n    baseFontSize,\n    baseLineHeight,\n    baseSpacing,\n    fontFace,\n    swatch,\n    setting,\n    base\n  } = {},\n  schema\n) => ({\n  name: instanceName,\n  id: instanceId,\n  baseFontSize: instanceBaseFontSize,\n  baseLineHeight: instanceBaseLineHeight,\n  baseSpacing: instanceBaseSpacing,\n  fontFace: instanceFontFace,\n  swatch: instanceSwatch,\n  setting: instanceSetting,\n  base: instanceBase\n} = {}) =>\n  Object.assign({}, schema, {\n    name: instanceName || name || schema.name,\n    id: instanceId || id || schema.id,\n    baseFontSize: instanceBaseFontSize || baseFontSize || schema.baseFontSize,\n    baseLineHeight:\n      instanceBaseLineHeight || baseLineHeight || schema.baseLineHeight,\n    baseSpacing: instanceBaseSpacing || baseSpacing || schema.baseSpacing,\n    fontFace: instanceFontFace || fontFace || schema.fontFace,\n    swatch: instanceSwatch || swatch || schema.swatch,\n    setting: instanceSetting || setting || schema.setting,\n    base: instanceBase || base || schema.base\n  })\n\nexport default factoryFor\n","import schema from './schema'\nimport base from './types/base'\nimport factoryFor from './factoryFor'\n\nconst theme = {\n  base: factoryFor(base, schema)\n}\n\nexport default theme\n"],"names":["content","view","viewable","reference","object","_ROOT_ATTRIBUTE_","unit","factoryFor","schema","factoryDisplay","factoryContent","Object","assign","REFERENCE","HEX","HEXA","RGB","RGBA","SWATCH","COLOR","STRING","FONT_FACE","FONT_FAMILY","FACTOR","PX","REM","BASE_FONT_SIZE_KEY","FONT_SIZE","FONT_WEIGHT","LINE_HEIGHT","BASE_SPACING_KEY","SPACING","name","ordinal","_ROOT_UNIT_","value","factor","hex","hexa","px","rem","rgb","rgba","string","BASE_SPACING","BASE_FONT_SIZE_PATH","BASE_LINE_HEIGHT","BASE_FONT_SIZE","attribute","baseFontSize","baseSpacing","baseLineHeight","color","fontFamily","fontSize","fontWeight","lineHeight","fontFace","spacing","swatch","_THEME_SETTING_","COLOR_KEY","FONT_FAMILY_KEY","FONT_SIZE_KEY","FONT_WEIGHT_KEY","SPACING_KEY","instanceColor","instanceFontFamily","instanceFontSize","instanceFontWeight","instanceSpacing","setting","base","_THEME_BASE_","BASE_LINE_HEIGHT_KEY","instanceBaseFontSize","instanceBaseSpacing","instanceBaseLineHeight","root","id","uuid","_ROOT_THEME_","version","VERSION","BASIC","instanceName","instanceId","instanceFontFace","instanceSwatch","instanceSetting","instanceBase","theme"],"mappings":"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"}