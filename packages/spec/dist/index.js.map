{"version":3,"file":"index.js","sources":["../src/components/PrintTypes.js","../src/Info/Globals.js","../src/components/AttributeGroup.js","../src/Info/Swatch.js","../src/Info/FontFace.js","../src/Info/FontFamily.js","../src/Info/FontSize.js","../src/Info/FontWeight.js","../src/Info/Color.js","../src/Info/Spacing.js","../src/Info/BaseFontSize.js","../src/Info/BaseLineHeight.js","../src/Info/BaseSpacing.js","../src/constants/typography.js","../src/utils/styleHelpers.js","../src/Specimen/BaseFont.js","../src/components/Spec/Unit.js","../src/components/Spec/index.js","../src/components/Deserialize.js","../src/Specimen/FontWeight.js","../../theme-helpers/dist/index.js","../src/Specimen/Typography/index.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport styled, { css } from 'styled-components'\nimport { SimpleList, THead } from '@airtheme/ui'\n\nconst Strike = styled.span`\n  text-decoration: line-through;\n  color: #999;\n`\n\nconst printUnrenderable = val => {\n  if (val === null) {\n    return <Strike>null</Strike>\n  }\n\n  if (typeof val === 'undefined') {\n    return <Strike>undefined</Strike>\n  }\n\n  if (Array.isArray(val)) {\n    return `[array/${val.length}]`\n  }\n\n  if (typeof val === 'object') {\n    return '{object}'\n  }\n\n  return val\n}\n\nexport const Node = ({ name, val }) => (\n  <Fragment>\n    <strong>{name}</strong>\n    <span>{printUnrenderable(val)}</span>\n  </Fragment>\n)\n\nexport const Unit = ({ unit }) => (\n  <Fragment>\n    <span>{printUnrenderable(unit.name)}</span>\n    <span>{printUnrenderable(unit.value)}</span>\n    <span>{printUnrenderable(unit.ordinal)}</span>\n    <span>{printUnrenderable(unit.object)}</span>\n  </Fragment>\n)\n\nexport const Attribute = ({ attribute }) => (\n  <SimpleList.TwoColumns>\n    {Object.entries(attribute).map(([key, val], idx) => (\n      <Node key={idx} name={key} val={val} />\n    ))}\n  </SimpleList.TwoColumns>\n)\n\nexport const AttributeContent = ({ content = [] }) => (\n  <SimpleList.FourColumns>\n    <THead colNames={['name', 'value', 'ordinal', 'unit']} />\n    {Array.isArray(content) ? (\n      content.length ? (\n        content.map((unit, idx) => <Unit key={idx} unit={unit} />)\n      ) : (\n        <Strike>empty</Strike>\n      )\n    ) : (\n      <Unit unit={content} />\n    )}\n  </SimpleList.FourColumns>\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Node } from '../components/PrintTypes'\nimport { SimpleList } from '@airtheme/ui'\nimport { mapId, mapName, mapVersion } from '@airtheme/make'\n\nconst Id = connect(mapId)(({ id }) => (\n  <SimpleList.TwoColumns>\n    <Node name=\"id\" val={id} />\n  </SimpleList.TwoColumns>\n))\nconst Name = connect(mapName)(({ name }) => (\n  <SimpleList.TwoColumns>\n    <Node name=\"name\" val={name} />\n  </SimpleList.TwoColumns>\n))\nconst Version = connect(mapVersion)(({ version }) => (\n  <SimpleList.TwoColumns>\n    <Node name=\"version\" val={version} />\n  </SimpleList.TwoColumns>\n))\n\nconst Globals = () => (\n  <SimpleList>\n    <Id />\n    <Name />\n    <Version />\n  </SimpleList>\n)\n\nexport default Globals\n","import styled from 'styled-components'\nimport { SimpleList } from '@airtheme/ui'\n\nconst AttributeGroup = styled(SimpleList.OneColumn)`\n  grid-row-gap: 2rem;\n`\n\nexport default AttributeGroup\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapSwatch, mapSwatchContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst SwatchAttribute = connect(mapSwatch)(({ swatch }) => (\n  <Attribute attribute={swatch} />\n))\n\nconst SwatchContent = connect(mapSwatchContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst Swatch = () => (\n  <AttributeGroup>\n    <SwatchAttribute />\n    <SwatchContent />\n  </AttributeGroup>\n)\n\nexport default Swatch\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapFontFace, mapFontFaceContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst FontFaceAttribute = connect(mapFontFace)(({ fontFace }) => (\n  <Attribute attribute={fontFace} />\n))\nconst FontFaceContent = connect(mapFontFaceContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst FontFace = () => (\n  <AttributeGroup>\n    <FontFaceAttribute />\n    <FontFaceContent />\n  </AttributeGroup>\n)\n\nexport default FontFace\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapFontFamily, mapFontFamilyContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst FontFamilyAttribute = connect(mapFontFamily)(({ fontFamily }) => (\n  <Attribute attribute={fontFamily} />\n))\nconst FontFamilyContent = connect(mapFontFamilyContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst FontFamily = () => (\n  <AttributeGroup>\n    <FontFamilyAttribute />\n    <FontFamilyContent />\n  </AttributeGroup>\n)\n\nexport default FontFamily\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapFontSize, mapFontSizeContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst FontSizeAttribute = connect(mapFontSize)(({ fontSize }) => (\n  <Attribute attribute={fontSize} />\n))\nconst FontSizeContent = connect(mapFontSizeContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst FontSize = () => (\n  <AttributeGroup>\n    <FontSizeAttribute />\n    <FontSizeContent />\n  </AttributeGroup>\n)\n\nexport default FontSize\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapFontWeight, mapFontWeightContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst FontWeightAttribute = connect(mapFontWeight)(({ fontWeight }) => (\n  <Attribute attribute={fontWeight} />\n))\nconst FontWeightContent = connect(mapFontWeightContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst FontWeight = () => (\n  <AttributeGroup>\n    <FontWeightAttribute />\n    <FontWeightContent />\n  </AttributeGroup>\n)\n\nexport default FontWeight\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapColor, mapColorContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst ColorAttribute = connect(mapColor)(({ color }) => (\n  <Attribute attribute={color} />\n))\nconst ColorContent = connect(mapColorContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst Color = () => (\n  <AttributeGroup>\n    <ColorAttribute />\n    <ColorContent />\n  </AttributeGroup>\n)\n\nexport default Color\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mapSpacing, mapSpacingContent } from '@airtheme/make'\nimport { SimpleList } from '@airtheme/ui'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst SpacingAttribute = connect(mapSpacing)(({ spacing }) => (\n  <Attribute attribute={spacing} />\n))\nconst SpacingContent = connect(mapSpacingContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst Spacing = () => (\n  <AttributeGroup>\n    <SpacingAttribute />\n    <SpacingContent />\n  </AttributeGroup>\n)\n\nexport default Spacing\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  mapBaseFontSize,\n  mapBaseFontSizeContent,\n  SimpleList\n} from '@airtheme/make'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst BaseFontSizeAttribute = connect(mapBaseFontSize)(({ baseFontSize }) => (\n  <Attribute attribute={baseFontSize} />\n))\nconst BaseFontSizeContent = connect(mapBaseFontSizeContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst BaseFontSize = () => (\n  <AttributeGroup>\n    <BaseFontSizeAttribute />\n    <BaseFontSizeContent />\n  </AttributeGroup>\n)\n\nexport default BaseFontSize\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  mapBaseLineHeight,\n  mapBaseLineHeightContent,\n  SimpleList\n} from '@airtheme/make'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst BaseLineHeightAttribute = connect(mapBaseLineHeight)(\n  ({ baseLineHeight }) => <Attribute attribute={baseLineHeight} />\n)\nconst BaseLineHeightContent = connect(mapBaseLineHeightContent)(\n  ({ content }) => <AttributeContent content={content} />\n)\n\nconst BaseLineHeight = () => (\n  <AttributeGroup>\n    <BaseLineHeightAttribute />\n    <BaseLineHeightContent />\n  </AttributeGroup>\n)\n\nexport default BaseLineHeight\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  mapBaseSpacing,\n  mapBaseSpacingContent,\n  SimpleList\n} from '@airtheme/make'\nimport { Attribute, AttributeContent } from '../components/PrintTypes'\nimport AttributeGroup from '../components/AttributeGroup'\n\nconst BaseSpacingAttribute = connect(mapBaseSpacing)(({ baseSpacing }) => (\n  <Attribute attribute={baseSpacing} />\n))\nconst BaseSpacingContent = connect(mapBaseSpacingContent)(({ content }) => (\n  <AttributeContent content={content} />\n))\n\nconst BaseSpacing = () => (\n  <AttributeGroup>\n    <BaseSpacingAttribute />\n    <BaseSpacingContent />\n  </AttributeGroup>\n)\n\nexport default BaseSpacing\n","export const alpha = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z'\n]\n\nconst upCase = string => string.toUpperCase()\nexport const lowercase = alpha.join('')\nexport const uppercase = alpha.map(upCase).join('')\nexport const allcase = alpha\n  .reduce((acc, char) => [...acc, upCase(char), char], [])\n  .join('')\n\nexport const numerals = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].join(\n  ''\n)\nexport const puncuation = [\n  '.',\n  ':',\n  ',',\n  ';',\n  '()',\n  '{}',\n  '[]',\n  '!',\n  '@',\n  '#',\n  '$',\n  '%',\n  '^',\n  '&',\n  '*'\n].join('')\nexport const typeset = allcase.concat(numerals, puncuation)\n","import { css } from 'styled-components'\n\nexport const baseTypography = ({ theme }) => css`\n  line-height: ${theme.baseLineHeight};\n  font-size: ${theme.baseFontSize};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  lowercase,\n  uppercase,\n  numerals,\n  puncuation\n} from '../constants/typography'\nimport { baseTypography } from '../utils/styleHelpers'\n\nconst TypesetContainer = styled.div`\n  transform: font-size 0.2s linear;\n  word-break: break-all;\n  ${baseTypography};\n`\n\nconst BaseFontSpecimen = () => (\n  <TypesetContainer>\n    <div>{uppercase}</div>\n    <div>{lowercase}</div>\n    <div>{numerals}</div>\n    <div>{puncuation}</div>\n  </TypesetContainer>\n)\n\nexport default BaseFontSpecimen\n","import styled from 'styled-components'\n\nconst Unit = styled.div`\n  display: grid;\n  grid-template-columns: 120px 1fr auto;\n  padding: 1rem 0;\n  grid-gap: 1rem;\n  grid-template-areas:\n    \"meta specimen actions\";\n\n  > div {\n    display: flex;\n    align-items: flex-start;\n  }\n}\n`\n\nconst Specimen = styled.div`\n  grid-area: specimen;\n`\nconst Meta = styled.div`\n  grid-area: meta;\n`\nconst Actions = styled.div`\n  grid-area: actions;\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 0.5rem;\n  align-items: flex-start;\n`\n\nUnit.Specimen = Specimen\nUnit.Meta = Meta\nUnit.Actions = Actions\n\nexport default Unit\n","import styled from 'styled-components'\nimport Unit from './Unit'\n\nconst Spec = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n`\nconst Header = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n`\nconst Content = styled.div``\nconst Footer = styled.div``\n\nconst HeaderTitle = styled.div`\n  font-weight: bold;\n  font-size: 70%;\n`\nconst HeaderActions = styled.div``\n\nSpec.Header = Header\nSpec.Header.Title = HeaderTitle\nSpec.Header.Actions = HeaderActions\n\nSpec.Content = Content\nSpec.Footer = Footer\n\nSpec.Unit = Unit\n\nexport default Spec\n","import React from 'react'\nimport { deserializeAttribute } from '@airtheme/type'\n\nconst Deserialize = ({ attribute, unit = {}, render, theme = {} }) =>\n  render({\n    deserialized: Boolean(attribute)\n      ? deserializeAttribute({ ...attribute, content: [unit] }, theme)\n      : {}\n  })\n\nexport default Deserialize\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport Spec from '../components/Spec'\nimport Deserialize from '../components/Deserialize'\n\nconst DEFAULT_TEXT = 'The quick brown fox jumped over the lazy dog.'\nconst MICRO_TEXT = 'Aa'\n\nconst Styles = styled.div`\n  font-weight: ${({ fontWeight }) => fontWeight};\n\n  ${({ pad }) =>\n    pad &&\n    css`\n      min-height: 100px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 1rem;\n    `};\n\n  ${({ micro }) =>\n    micro &&\n    css`\n      min-height: 72px;\n    `};\n`\n\nconst FontWeightSpecimen = ({\n  attribute,\n  unit,\n  micro = false,\n  pad = false\n}) => (\n  <Deserialize\n    attribute={attribute}\n    unit={unit}\n    render={({ deserialized }) => (\n      <Styles\n        fontWeight={Object.values(deserialized)[0]}\n        micro={micro}\n        pad={pad}\n      >\n        {micro ? MICRO_TEXT : DEFAULT_TEXT}\n      </Styles>\n    )}\n  />\n)\n\nexport default FontWeightSpecimen\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar styledComponents = require('styled-components');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar BACKGROUND_COLOR = 'background-color';\nvar BACKGROUND = 'background';\nvar BORDER_BOTTOM_COLOR = 'border-bottom-color';\nvar BORDER_BOTTOM_LEFT_RADIUS = 'border-bottom-left-radius';\nvar BORDER_BOTTOM_RIGHT_RADIUS = 'border-bottom-right-radius';\nvar BORDER_COLOR = 'border-color';\nvar BORDER_LEFT_COLOR = 'border-left-color';\nvar BORDER_RADIUS = 'border-radius';\nvar BORDER_RIGHT_COLOR = 'border-right-color';\nvar BORDER_TOP_COLOR = 'border-top-color';\nvar BORDER_TOP_LEFT_RADIUS = 'border-top-left-radius';\nvar BORDER_TOP_RIGHT_RADIUS = 'border-top-right-radius';\nvar BOTTOM = 'bottom';\nvar BOX_SHADOW = 'box-shadow';\nvar CARET_COLOR = 'caret-color';\nvar COLOR = 'color';\nvar FONT_FAMILY = 'font-family';\nvar FONT_SIZE = 'font-size';\nvar FONT_WEIGHT = 'font-weight';\nvar GRID_GAP = 'grid-gap';\nvar GRID_COLUMN_GAP = 'grid-column-gap';\nvar GRID_ROW_GAP = 'grid-row-gap';\nvar HEIGHT = 'height';\nvar LEFT = 'left';\nvar LINE_HEIGHT = 'line-height';\nvar MARGIN_BOTTOM = 'margin-bottom';\nvar MARGIN_LEFT = 'margin-left';\nvar MARGIN_RIGHT = 'margin-right';\nvar MARGIN_TOP = 'margin-top';\nvar MARGIN = 'margin';\nvar MAX_HEIGHT = 'max-height';\nvar MAX_WIDTH = 'max-width';\nvar MIN_HEIGHT = 'min-height';\nvar MIN_WIDTH = 'min-width';\nvar OPACITY = 'opacity';\nvar OUTLINE_COLOR = 'outline-color';\nvar PADDING_BOTTOM = 'padding-bottom';\nvar PADDING_LEFT = 'padding-left';\nvar PADDING_RIGHT = 'padding-right';\nvar PADDING_TOP = 'padding-top';\nvar PADDING = 'padding';\nvar RIGHT = 'right';\nvar TOP = 'top';\nvar WIDTH = 'width';\nvar ZINDEX = 'z-index';\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\nvar mapBaseFontSize = function mapBaseFontSize(_ref) {\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? {} : _ref$theme;\n  return theme;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapBaseLineHeight = function mapBaseLineHeight(_ref2) {\n  var _ref2$theme = _ref2.theme,\n      theme = _ref2$theme === void 0 ? {} : _ref2$theme;\n  return theme;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapBaseSpacing = function mapBaseSpacing(_ref3) {\n  var _ref3$theme = _ref3.theme,\n      theme = _ref3$theme === void 0 ? {} : _ref3$theme;\n  return theme;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapColor = function mapColor(_ref4) {\n  var _ref4$theme$setting$c = _ref4.theme.setting.color,\n      color = _ref4$theme$setting$c === void 0 ? {} : _ref4$theme$setting$c;\n  return color;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapFontFace = function mapFontFace(_ref5) {\n  var _ref5$theme$fontFace = _ref5.theme.fontFace,\n      fontFace = _ref5$theme$fontFace === void 0 ? {} : _ref5$theme$fontFace;\n  return fontFace;\n};\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapFontFamily = function mapFontFamily(_ref6) {\n  var _ref6$theme$setting$f = _ref6.theme.setting.fontFamily,\n      fontFamily = _ref6$theme$setting$f === void 0 ? {} : _ref6$theme$setting$f;\n  return fontFamily;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapFontSize = function mapFontSize(_ref7) {\n  var _ref7$theme$setting$f = _ref7.theme.setting.fontSize,\n      fontSize = _ref7$theme$setting$f === void 0 ? {} : _ref7$theme$setting$f;\n  return fontSize;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapFontWeight = function mapFontWeight(_ref8) {\n  var _ref8$theme$setting$f = _ref8.theme.setting.fontWeight,\n      fontWeight = _ref8$theme$setting$f === void 0 ? {} : _ref8$theme$setting$f;\n  return fontWeight;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapSpacing = function mapSpacing(_ref9) {\n  var _ref9$theme$setting$s = _ref9.theme.setting.spacing,\n      spacing = _ref9$theme$setting$s === void 0 ? {} : _ref9$theme$setting$s;\n  return spacing;\n}; // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitContext}\n */\n\nvar mapSwatch = function mapSwatch(_ref10) {\n  var _ref10$theme$swatch = _ref10.theme.swatch,\n      swatch = _ref10$theme$swatch === void 0 ? {} : _ref10$theme$swatch;\n  return swatch;\n};\n\nvar _BACKGROUND_COLOR$BAC;\n\nvar noimp = function noimp() {\n  return null;\n};\n\nvar cssAttrMap = (_BACKGROUND_COLOR$BAC = {}, _defineProperty(_BACKGROUND_COLOR$BAC, BACKGROUND_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BACKGROUND, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_BOTTOM_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_BOTTOM_LEFT_RADIUS, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_BOTTOM_RIGHT_RADIUS, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_LEFT_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_RADIUS, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_RIGHT_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_TOP_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_TOP_LEFT_RADIUS, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, BORDER_TOP_RIGHT_RADIUS, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, BOTTOM, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, BOX_SHADOW, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, CARET_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, FONT_FAMILY, mapFontFamily), _defineProperty(_BACKGROUND_COLOR$BAC, FONT_SIZE, mapFontSize), _defineProperty(_BACKGROUND_COLOR$BAC, FONT_WEIGHT, mapFontWeight), _defineProperty(_BACKGROUND_COLOR$BAC, GRID_GAP, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, GRID_COLUMN_GAP, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, GRID_ROW_GAP, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, HEIGHT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, LEFT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, LINE_HEIGHT, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, MARGIN_BOTTOM, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MARGIN_LEFT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MARGIN_RIGHT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MARGIN_TOP, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MARGIN, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MAX_HEIGHT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MAX_WIDTH, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MIN_HEIGHT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, MIN_WIDTH, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, OPACITY, noimp), _defineProperty(_BACKGROUND_COLOR$BAC, OUTLINE_COLOR, mapColor), _defineProperty(_BACKGROUND_COLOR$BAC, PADDING_BOTTOM, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, PADDING_LEFT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, PADDING_RIGHT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, PADDING_TOP, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, PADDING, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, RIGHT, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, TOP, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, WIDTH, mapSpacing), _defineProperty(_BACKGROUND_COLOR$BAC, ZINDEX, noimp), _BACKGROUND_COLOR$BAC);\n\nvar curry = function curry(fn) {\n  var curried = function curried() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length >= fn.length) {\n      return fn.apply(void 0, args);\n    }\n\n    return function () {\n      for (var _len2 = arguments.length, args2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args2[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(void 0, _toConsumableArray(args.concat(args2)));\n    };\n  };\n\n  return curried;\n};\n\n// prettier-ignore\n\n/**\n * Curried get `unitValue` for given `mapContextFn`, `unitKey`, and `props`\n * @param {mapContextFn}\n * @param {unitKey}\n * @param {props}\n */\nvar getWithContext = curry(function (mapContextFn, unitKey, props) {\n  return get(unitKey)(connectContext(mapContextFn)(props));\n});\n/**\n * Curried get `unitContext` for given `mapContextFn` and `props`.\n * @param {mapContextFn}\n * @param {props}\n * @returns {unitContext}\n */\n\nvar connectContext = function connectContext(mapContextFn) {\n  return function (props) {\n    return mapContextFn(props);\n  };\n};\n/**\n * Curried get `unitValue` for given `unitKey` and `unitContext`.\n * @param {unitKey}\n * @param {unitContext}\n * @returns {unitValue}\n */\n\n\nvar get = function get(unitKey) {\n  return function (unitContext) {\n    return unitContext[unitKey];\n  };\n};\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      \", \": \", \";\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Constructs a styled-components `cssRule`.\n * @param {cssAttr}\n * @param {unitKey}\n * @param {props}\n * @returns {cssRule}\n */\nvar cssRuleFor = curry(function (cssAttr, unitKey, props) {\n  return styledComponents.css(_templateObject(), cssAttr, getWithContext(cssAttrMap[cssAttr])(unitKey, props));\n});\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\nvar backgroundColor = cssRuleFor(BACKGROUND_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar background = cssRuleFor(BACKGROUND); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderBottomColor = cssRuleFor(BORDER_BOTTOM_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderBottomLeftRadius = cssRuleFor(BORDER_BOTTOM_LEFT_RADIUS); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderBottomRightRadius = cssRuleFor(BORDER_BOTTOM_RIGHT_RADIUS); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderColor = cssRuleFor(BORDER_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderLeftColor = cssRuleFor(BORDER_LEFT_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderRadius = cssRuleFor(BORDER_RADIUS); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderRightColor = cssRuleFor(BORDER_RIGHT_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderTopColor = cssRuleFor(BORDER_TOP_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderTopLeftRadius = cssRuleFor(BORDER_TOP_LEFT_RADIUS); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar borderTopRightRadius = cssRuleFor(BORDER_TOP_RIGHT_RADIUS); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar bottom = cssRuleFor(BOTTOM); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar boxShadow = cssRuleFor(BOX_SHADOW); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar caretColor = cssRuleFor(CARET_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar color = cssRuleFor(COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontFamily = cssRuleFor(FONT_FAMILY); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontSize = cssRuleFor(FONT_SIZE); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontWeight = cssRuleFor(FONT_WEIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar gridGap = cssRuleFor(GRID_GAP); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar gridColumnGap = cssRuleFor(GRID_COLUMN_GAP); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar gridRowGap = cssRuleFor(GRID_ROW_GAP); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar height = cssRuleFor(HEIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar left = cssRuleFor(LEFT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar lineHeight = cssRuleFor(LINE_HEIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar marginBottom = cssRuleFor(MARGIN_BOTTOM); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar marginLeft = cssRuleFor(MARGIN_LEFT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar marginRight = cssRuleFor(MARGIN_RIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar marginTop = cssRuleFor(MARGIN_TOP); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar margin = cssRuleFor(MARGIN); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar maxHeight = cssRuleFor(MAX_HEIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar maxWidth = cssRuleFor(MAX_WIDTH); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar minHeight = cssRuleFor(MIN_HEIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar minWidth = cssRuleFor(MIN_WIDTH); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar opacity = cssRuleFor(OPACITY); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar outlineColor = cssRuleFor(OUTLINE_COLOR); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar paddingBottom = cssRuleFor(PADDING_BOTTOM); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar paddingLeft = cssRuleFor(PADDING_LEFT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar paddingRight = cssRuleFor(PADDING_RIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar paddingTop = cssRuleFor(PADDING_TOP); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar padding = cssRuleFor(PADDING); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar right = cssRuleFor(RIGHT); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar top = cssRuleFor(TOP); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar width = cssRuleFor(WIDTH); //prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar zIndex = cssRuleFor(ZINDEX); //prettier-ignore\n\nvar cssFor = /*#__PURE__*/Object.freeze({\n  backgroundColor: backgroundColor,\n  background: background,\n  borderBottomColor: borderBottomColor,\n  borderBottomLeftRadius: borderBottomLeftRadius,\n  borderBottomRightRadius: borderBottomRightRadius,\n  borderColor: borderColor,\n  borderLeftColor: borderLeftColor,\n  borderRadius: borderRadius,\n  borderRightColor: borderRightColor,\n  borderTopColor: borderTopColor,\n  borderTopLeftRadius: borderTopLeftRadius,\n  borderTopRightRadius: borderTopRightRadius,\n  bottom: bottom,\n  boxShadow: boxShadow,\n  caretColor: caretColor,\n  color: color,\n  fontFamily: fontFamily,\n  fontSize: fontSize,\n  fontWeight: fontWeight,\n  gridGap: gridGap,\n  gridColumnGap: gridColumnGap,\n  gridRowGap: gridRowGap,\n  height: height,\n  left: left,\n  lineHeight: lineHeight,\n  marginBottom: marginBottom,\n  marginLeft: marginLeft,\n  marginRight: marginRight,\n  marginTop: marginTop,\n  margin: margin,\n  maxHeight: maxHeight,\n  maxWidth: maxWidth,\n  minHeight: minHeight,\n  minWidth: minWidth,\n  opacity: opacity,\n  outlineColor: outlineColor,\n  paddingBottom: paddingBottom,\n  paddingLeft: paddingLeft,\n  paddingRight: paddingRight,\n  paddingTop: paddingTop,\n  padding: padding,\n  right: right,\n  top: top,\n  width: width,\n  zIndex: zIndex\n});\n\n/**\n * @param {props}\n * @returns {unitValue}\n */\nvar baseFontSize = getWithContext(mapBaseFontSize)('baseFontSize'); // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitValue}\n */\n\nvar baseLineHeight = getWithContext(mapBaseLineHeight)('baseLineHeight'); // prettier-ignore\n\n/**\n * @param {props}\n * @returns {unitValue}\n */\n\nvar baseSpacing = getWithContext(mapBaseSpacing)('baseSpacing'); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar color$1 = getWithContext(mapColor); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontFace = getWithContext(mapFontFace); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontFamily$1 = getWithContext(mapFontFamily); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontSize$1 = getWithContext(mapFontSize); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar fontWeight$1 = getWithContext(mapFontWeight); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar spacing = getWithContext(mapSpacing); // prettier-ignore\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {unitValue}\n */\n\nvar swatch = getWithContext(mapSwatch); // prettier-ignore\n\nvar get$1 = /*#__PURE__*/Object.freeze({\n  baseFontSize: baseFontSize,\n  baseLineHeight: baseLineHeight,\n  baseSpacing: baseSpacing,\n  color: color$1,\n  fontFace: fontFace,\n  fontFamily: fontFamily$1,\n  fontSize: fontSize$1,\n  fontWeight: fontWeight$1,\n  spacing: spacing,\n  swatch: swatch\n});\n\n/**\n * @param {unitKey}\n * @param {props}\n * @returns {cssRule}\n */\nvar ifRuleFor = curry(function (cssAttrKey, unitKey, props) {\n  return props[cssAttrKey] && cssFor[cssAttrKey](unitKey, props);\n});\n\nvar ifBackgroundColor = ifRuleFor('backgroundColor');\nvar ifBackground = ifRuleFor('background');\nvar ifBorderBottomColor = ifRuleFor('borderBottomColor');\nvar ifBorderBottomLeftRadius = ifRuleFor('borderBottomLeftRadius');\nvar ifBorderBottomRightRadius = ifRuleFor('borderBottomRightRadius');\nvar ifBorderColor = ifRuleFor('borderColor');\nvar ifBorderLeftColor = ifRuleFor('borderLeftColor');\nvar ifBorderRadius = ifRuleFor('borderRadius');\nvar ifBorderRightColor = ifRuleFor('borderRightColor');\nvar ifBorderTopColor = ifRuleFor('borderTopColor');\nvar ifBorderTopLeftRadius = ifRuleFor('borderTopLeftRadius');\nvar ifBorderTopRightRadius = ifRuleFor('borderTopRightRadius');\nvar ifBottom = ifRuleFor('bottom');\nvar ifCaretColor = ifRuleFor('caretColor');\nvar ifColor = ifRuleFor('color');\nvar ifFontFamily = ifRuleFor('fontFamily');\nvar ifFontSize = ifRuleFor('fontSize');\nvar ifFontWeight = ifRuleFor('fontWeight');\nvar ifGridGap = ifRuleFor('gridGap');\nvar ifGridColumnGap = ifRuleFor('gridColumnGap');\nvar ifGridRowGap = ifRuleFor('gridRowGap');\nvar ifHeight = ifRuleFor('height');\nvar ifLeft = ifRuleFor('left');\nvar ifLineHeight = ifRuleFor('lineHeight');\nvar ifMarginBottom = ifRuleFor('marginBottom');\nvar ifMarginLeft = ifRuleFor('marginLeft');\nvar ifMarginRight = ifRuleFor('marginRight');\nvar ifMarginTop = ifRuleFor('marginTop');\nvar ifMargin = ifRuleFor('margin');\nvar ifMaxHeight = ifRuleFor('maxHeight');\nvar ifMaxWidth = ifRuleFor('maxWidth');\nvar ifMinHeight = ifRuleFor('minHeight');\nvar ifMinWidth = ifRuleFor('minWidth');\nvar ifOpacity = ifRuleFor('opacity');\nvar ifOutlineColor = ifRuleFor('outlineColor');\nvar ifPaddingBottom = ifRuleFor('paddingBottom');\nvar ifPaddingLeft = ifRuleFor('paddingLeft');\nvar ifPaddingRight = ifRuleFor('paddingRight');\nvar ifPaddingTop = ifRuleFor('paddingTop');\nvar ifPadding = ifRuleFor('padding');\nvar ifRight = ifRuleFor('right');\nvar ifTop = ifRuleFor('top');\nvar ifWidth = ifRuleFor('width');\nvar ifZIndex = ifRuleFor('zIndex');\n\nvar ifCss = /*#__PURE__*/Object.freeze({\n  ifBackgroundColor: ifBackgroundColor,\n  ifBackground: ifBackground,\n  ifBorderBottomColor: ifBorderBottomColor,\n  ifBorderBottomLeftRadius: ifBorderBottomLeftRadius,\n  ifBorderBottomRightRadius: ifBorderBottomRightRadius,\n  ifBorderColor: ifBorderColor,\n  ifBorderLeftColor: ifBorderLeftColor,\n  ifBorderRadius: ifBorderRadius,\n  ifBorderRightColor: ifBorderRightColor,\n  ifBorderTopColor: ifBorderTopColor,\n  ifBorderTopLeftRadius: ifBorderTopLeftRadius,\n  ifBorderTopRightRadius: ifBorderTopRightRadius,\n  ifBottom: ifBottom,\n  ifCaretColor: ifCaretColor,\n  ifColor: ifColor,\n  ifFontFamily: ifFontFamily,\n  ifFontSize: ifFontSize,\n  ifFontWeight: ifFontWeight,\n  ifGridGap: ifGridGap,\n  ifGridColumnGap: ifGridColumnGap,\n  ifGridRowGap: ifGridRowGap,\n  ifHeight: ifHeight,\n  ifLeft: ifLeft,\n  ifLineHeight: ifLineHeight,\n  ifMarginBottom: ifMarginBottom,\n  ifMarginLeft: ifMarginLeft,\n  ifMarginRight: ifMarginRight,\n  ifMarginTop: ifMarginTop,\n  ifMargin: ifMargin,\n  ifMaxHeight: ifMaxHeight,\n  ifMaxWidth: ifMaxWidth,\n  ifMinHeight: ifMinHeight,\n  ifMinWidth: ifMinWidth,\n  ifOpacity: ifOpacity,\n  ifOutlineColor: ifOutlineColor,\n  ifPaddingBottom: ifPaddingBottom,\n  ifPaddingLeft: ifPaddingLeft,\n  ifPaddingRight: ifPaddingRight,\n  ifPaddingTop: ifPaddingTop,\n  ifPadding: ifPadding,\n  ifRight: ifRight,\n  ifTop: ifTop,\n  ifWidth: ifWidth,\n  ifZIndex: ifZIndex\n});\n\nexports.cssAttrMap = cssAttrMap;\nexports.cssFor = cssFor;\nexports.get = get$1;\nexports.ifCss = ifCss;\n//# sourceMappingURL=index.js.map\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { get } from '@airtheme/theme-helpers'\n\nconst DEFAULT_TEXT = 'The quick brown fox jumped over the lazy dog.'\n\nconst cssForDeserialized = ({ attribute, cssAttr, deserializedValue }) =>\n  deserializedValue &&\n  cssAttr &&\n  css`\n    ${cssAttr}: ${deserializedValue};\n  `\n\nconst Styles = styled.div`\n  ${cssForDeserialized};\n`\n\nconst Globals = styled.div`\n  font-size: ${get.baseFontSize};\n  line-height: ${get.baseLineHeight};\n`\n\nconst Typography = props => (\n  <Globals>\n    <Styles {...props}>{DEFAULT_TEXT}</Styles>\n  </Globals>\n)\n\nexport default Typography\n"],"names":["Strike","styled","span","printUnrenderable","val","React","Array","isArray","length","Node","name","Fragment","Unit","unit","value","ordinal","object","Attribute","attribute","SimpleList","Object","entries","map","idx","key","AttributeContent","content","THead","Id","connect","mapId","id","Name","mapName","Version","mapVersion","version","Globals","AttributeGroup","OneColumn","SwatchAttribute","mapSwatch","swatch","SwatchContent","mapSwatchContent","Swatch","FontFaceAttribute","mapFontFace","fontFace","FontFaceContent","mapFontFaceContent","FontFace","FontFamilyAttribute","mapFontFamily","fontFamily","FontFamilyContent","mapFontFamilyContent","FontFamily","FontSizeAttribute","mapFontSize","fontSize","FontSizeContent","mapFontSizeContent","FontSize","FontWeightAttribute","mapFontWeight","fontWeight","FontWeightContent","mapFontWeightContent","FontWeight","ColorAttribute","mapColor","color","ColorContent","mapColorContent","Color","SpacingAttribute","mapSpacing","spacing","SpacingContent","mapSpacingContent","Spacing","BaseFontSizeAttribute","mapBaseFontSize","baseFontSize","BaseFontSizeContent","mapBaseFontSizeContent","BaseFontSize","BaseLineHeightAttribute","mapBaseLineHeight","baseLineHeight","BaseLineHeightContent","mapBaseLineHeightContent","BaseLineHeight","BaseSpacingAttribute","mapBaseSpacing","baseSpacing","BaseSpacingContent","mapBaseSpacingContent","BaseSpacing","alpha","upCase","string","toUpperCase","lowercase","join","uppercase","allcase","reduce","acc","char","numerals","puncuation","typeset","concat","baseTypography","theme","css","TypesetContainer","div","BaseFontSpecimen","Specimen","Meta","Actions","Spec","Header","Content","Footer","HeaderTitle","HeaderActions","Title","Deserialize","render","deserialized","Boolean","deserializeAttribute","DEFAULT_TEXT","MICRO_TEXT","Styles","pad","micro","FontWeightSpecimen","values","NODE_ENV","process","cssForDeserialized","cssAttr","deserializedValue","get","Typography","props"],"mappings":"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"}