{"version":3,"file":"index.js","sources":["../node_modules/prism-react-renderer/es/vendor/prism/prism-core.js","../node_modules/prism-react-renderer/es/vendor/prism/index.js","../node_modules/prism-react-renderer/themes/duotoneDark.js","../node_modules/prism-react-renderer/es/defaultProps.js","../node_modules/prism-react-renderer/es/utils/normalizeTokens.js","../node_modules/prism-react-renderer/es/utils/themeToDict.js","../node_modules/prism-react-renderer/es/components/Highlight.js","../src/Pretty/index.js","../src/Print.js"],"sourcesContent":["/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Donâ€™t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\nmodule.exports = Prism;\nPrism.default = Prism;","import Prism from './prism-core';\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /(^|[^\\\\])[\"']/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  var insideString = {\n    variable: [// Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // Command Substitution\n    {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    'string': [//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'variable': insideString.variable,\n    // Originally based on http://ss64.com/bash/\n    'function': {\n      pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var inside = insideString.variable[1].inside;\n  inside.string = Prism.languages.bash.string;\n  inside['function'] = Prism.languages.bash['function'];\n  inside.keyword = Prism.languages.bash.keyword;\n  inside['boolean'] = Prism.languages.bash['boolean'];\n  inside.operator = Prism.languages.bash.operator;\n  inside.punctuation = Prism.languages.bash.punctuation;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /[a-z0-9_]+(?=\\()/i,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n  'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['class-name'];\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'operator': /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\nPrism.languages.insertBefore('cpp', 'keyword', {\n  'class-name': {\n    pattern: /(class\\s+)\\w+/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\nPrism.languages.css = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n  'atrule': {\n    pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n  'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n  'string': {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n  'important': /\\B!important\\b/i,\n  'function': /[-a-z0-9]+(?=\\()/i,\n  'punctuation': /[(){};:]/\n};\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'style': {\n      pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n      lookbehind: true,\n      inside: Prism.languages.css,\n      alias: 'language-css',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'style-attr': {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        'attr-name': {\n          pattern: /^\\s*style/i,\n          inside: Prism.languages.markup.tag.inside\n        },\n        'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        'attr-value': {\n          pattern: /.+/i,\n          inside: Prism.languages.css\n        }\n      },\n      alias: 'language-css'\n    }\n  }, Prism.languages.markup.tag);\n}\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  },\n  'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: null // See below\n\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {} else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': /\\[[^\\]]+\\]/\n  }\n};\nPrism.languages.insertBefore('css', 'function', {\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'number': /[\\d%.]+/\n});\n/* \"prismjs/components/prism-diff\" */\n\nPrism.languages.diff = {\n  'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n  /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n  /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n  /^\\d+.*$/m],\n  // Match inserted and deleted lines. Support both +/- and >/< styles.\n  'deleted': /^[-<].*$/m,\n  'inserted': /^[+>].*$/m,\n  // Match \"different\" lines (prefixed with \"!\") in context diff.\n  'diff': {\n    'pattern': /^!(?!!).+$/m,\n    'alias': 'important'\n  }\n};\n/* \"prismjs/components/prism-docker\" */\n\nPrism.languages.docker = {\n  'keyword': {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\n    lookbehind: true\n  },\n  'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  'comment': /#.*/,\n  'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n};\nPrism.languages.dockerfile = Prism.languages.docker;\n/* \"prismjs/components/prism-elixir\" */\n\nPrism.languages.elixir = {\n  'comment': {\n    pattern: /#.*/m,\n    lookbehind: true\n  },\n  // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n  'regex': {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: true\n  },\n  'string': [{\n    // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: true,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: true,\n    inside: {}\n  }, {\n    // Multi-line strings are allowed\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {}\n  }],\n  'atom': {\n    // Look-behind prevents bad highlighting of the :: operator\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  // Look-ahead prevents bad highlighting of the :: operator\n  'attr-name': /\\w+:(?!:)/,\n  'capture': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'argument': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'variable'\n  },\n  'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'operator': [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    // We don't want to match <<\n    pattern: /([^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /([^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n};\nPrism.languages.elixir.string.forEach(function (o) {\n  o.inside = {\n    'interpolation': {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        'delimiter': {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});\n/* \"prismjs/components/prism-erlang\" */\n\nPrism.languages.erlang = {\n  'comment': /%.+/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'quoted-function': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: 'function'\n  },\n  'quoted-atom': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: 'atom'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  'number': [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  'function': /\\b[a-z][\\w@]*(?=\\()/,\n  'variable': {\n    // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: true\n  },\n  'operator': [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'atom': /\\b[a-z][\\w@]*/,\n  'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n};\n/* \"prismjs/components/prism-git\" */\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-â€“].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n  'keyword': [{\n    pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n    lookbehind: true\n  }, /\\b(?:query|fragment|mutation)\\b/],\n  'operator': /!|=|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\nPrism.languages['markup-templating'] = {};\nObject.defineProperties(Prism.languages['markup-templating'], {\n  buildPlaceholders: {\n    // Tokenize all inline templating expressions matching placeholderPattern\n    // If the replaceFilter function is provided, it will be called with every match.\n    // If it returns false, the match will not be replaced.\n    value: function value(env, language, placeholderPattern, replaceFilter) {\n      if (env.language !== language) {\n        return;\n      }\n\n      env.tokenStack = [];\n      env.code = env.code.replace(placeholderPattern, function (match) {\n        if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n          return match;\n        }\n\n        var i = env.tokenStack.length; // Check for existing strings\n\n        while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n          ++i;\n        } // Create a sparse array\n\n\n        env.tokenStack[i] = match;\n        return '___' + language.toUpperCase() + i + '___';\n      }); // Switch the grammar to markup\n\n      env.grammar = Prism.languages.markup;\n    }\n  },\n  tokenizePlaceholders: {\n    // Replace placeholders with proper tokens after tokenizing\n    value: function value(env, language) {\n      if (env.language !== language || !env.tokenStack) {\n        return;\n      } // Switch the grammar back\n\n\n      env.grammar = Prism.languages[language];\n      var j = 0;\n      var keys = Object.keys(env.tokenStack);\n\n      var walkTokens = function walkTokens(tokens) {\n        if (j >= keys.length) {\n          return;\n        }\n\n        for (var i = 0; i < tokens.length; i++) {\n          var token = tokens[i];\n\n          if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n            var k = keys[j];\n            var t = env.tokenStack[k];\n            var s = typeof token === 'string' ? token : token.content;\n            var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n\n            if (index > -1) {\n              ++j;\n              var before = s.substring(0, index);\n              var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n              var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n              var replacement;\n\n              if (before || after) {\n                replacement = [before, middle, after].filter(function (v) {\n                  return !!v;\n                });\n                walkTokens(replacement);\n              } else {\n                replacement = middle;\n              }\n\n              if (typeof token === 'string') {\n                Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n              } else {\n                token.content = replacement;\n              }\n\n              if (j >= keys.length) {\n                break;\n              }\n            }\n          } else if (token.content && typeof token.content !== 'string') {\n            walkTokens(token.content);\n          }\n        }\n      };\n\n      walkTokens(env.tokens);\n    }\n  }\n});\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-haskell\" */\n\n\nPrism.languages.haskell = {\n  'comment': {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: true\n  },\n  'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  'import_statement': {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: true,\n    inside: {\n      'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  // decimal integers and floating point numbers | octal integers | hexadecimal integers\n  'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  'operator': /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  // In Haskell, nearly everything is a variable, do not highlight these.\n  'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-java\" */\n\nPrism.languages.java = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n  'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'function', {\n  'annotation': {\n    alias: 'punctuation',\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'class-name', {\n  'generics': {\n    pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n    alias: 'function',\n    inside: {\n      keyword: Prism.languages.java.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  }\n});\n/* \"prismjs/components/prism-json\" */\n\nPrism.languages.json = {\n  'property': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  'punctuation': /[{}[\\]);,]/,\n  'operator': /:/g,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'null': /\\bnull\\b/i\n};\nPrism.languages.jsonp = Prism.languages.json;\n/* \"prismjs/components/prism-latex\" */\n\n(function (Prism) {\n  var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      insideEqu = {\n    'equation-command': {\n      pattern: funcPattern,\n      alias: 'regex'\n    }\n  };\n  Prism.languages.latex = {\n    'comment': /%.*/m,\n    // the verbatim environment prints whitespace to the document\n    'cdata': {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * equations can be between $ $ or \\( \\) or \\[ \\]\n     * (all are multiline)\n     */\n    'equation': [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: insideEqu,\n      alias: 'string'\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true,\n      inside: insideEqu,\n      alias: 'string'\n    }],\n\n    /*\n     * arguments which are keywords or references are highlighted\n     * as keywords\n     */\n    'keyword': {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * section or chapter headlines are highlighted as bold so that\n     * they stand out more\n     */\n    'headline': {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function': {\n      pattern: funcPattern,\n      alias: 'selector'\n    },\n    'punctuation': /[[\\]{}&]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'punctuation': /[{}();:,]/,\n  'operator': /[+\\-*\\/]/\n}); // Invert function and punctuation positions\n\nPrism.languages.insertBefore('less', 'punctuation', {\n  'function': Prism.languages.less.function\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\nPrism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n  'blockquote': {\n    // > ...\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: 'punctuation'\n  },\n  'code': [{\n    // Prefixed by 4 spaces or 1 tab\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: 'keyword'\n  }, {\n    // `code`\n    // ``code``\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: 'keyword'\n  }],\n  'title': [{\n    // title 1\n    // =======\n    // title 2\n    // -------\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: 'important',\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    // # title 1\n    // ###### title 6\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: true,\n    alias: 'important',\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  'hr': {\n    // ***\n    // ---\n    // * * *\n    // -----------\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'list': {\n    // * item\n    // + item\n    // - item\n    // 1. item\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'url-reference': {\n    // [id]: http://example.com \"Optional title\"\n    // [id]: http://example.com 'Optional title'\n    // [id]: http://example.com (Optional title)\n    // [id]: <http://example.com> \"Optional title\"\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      'variable': {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: true\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      'punctuation': /^[\\[\\]!:]|[<>]/\n    },\n    alias: 'url'\n  },\n  'bold': {\n    // **strong**\n    // __strong__\n    // Allow only one line break\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  'italic': {\n    // *em*\n    // _em_\n    // Allow only one line break\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^[*_]|[*_]$/\n    }\n  },\n  'url': {\n    // [example](http://example.com \"Optional title\")\n    // [example] [id]\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      'variable': {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: true\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown['bold'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['italic'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['bold'].inside['italic'] = Prism.languages.markdown['italic'];\nPrism.languages.markdown['italic'].inside['bold'] = Prism.languages.markdown['bold'];\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n    'constant': /\\b[A-Z0-9_]{2,}\\b/,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'delimiter': {\n      pattern: /\\?>|<\\?(?:php|=)?/i,\n      alias: 'important'\n    },\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': null // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': null // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.php['heredoc-string'].inside['interpolation'] = string_interpolation;\n  Prism.languages.php['double-quoted-string'].inside['interpolation'] = string_interpolation;\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/(?:<\\?php|<\\?)/ig.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-php-extras\" */\n\n\nPrism.languages.insertBefore('php', 'variable', {\n  'this': /\\$this\\b/,\n  'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  'scope': {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n});\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'triple-quoted-string': {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-ruby\" */\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n * \t\tconstant, builtin, variable, symbol, regex\n */\n\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': [/#.*/, {\n      pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n      greedy: true\n    }],\n    'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'tag'\n      },\n      rest: Prism.languages.ruby\n    }\n  };\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex': [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  });\n  Prism.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    // Here we need to specifically allow interpolation\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }];\n})(Prism);\n/* \"prismjs/components/prism-rust\" */\n\n/* TODO\n\tAdd support for Markdown notation inside doc comments\n\tAdd support for nested block comments...\n\tMatch closure params even when not followed by dash or brace\n\tAdd better support for macro definition\n*/\n\n\nPrism.languages.rust = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: true\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }],\n  'char': {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: 'string'\n  },\n  'lifetime-annotation': {\n    pattern: /'[^\\s>']+/,\n    alias: 'symbol'\n  },\n  'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  'attribute': {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: true,\n    alias: 'attr-name'\n  },\n  'function': [/\\w+(?=\\s*\\()/, // Macros can use parens or brackets\n  /\\w+!(?=\\s*\\(|\\[)/],\n  'macro-rules': {\n    pattern: /\\w+!/,\n    alias: 'function'\n  },\n  // Hex, oct, bin, dec numbers with visual separators and type suffix\n  'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  // Closure params should not be confused with bitwise OR |\n  'closure-params': {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      'punctuation': /[|:,]/,\n      'operator': /[&*]/\n    }\n  },\n  'punctuation': /[{}[\\];(),:]|\\.+|->/,\n  'operator': /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  delete Prism.languages.sass.selector;\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)*url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.scss.property = {\n  pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n  inside: {\n    'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  }\n};\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': /\\bnull\\b/,\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'variable': /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-swift\" */\n// issues: nested multiline comments\n\n\nPrism.languages.swift = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n});\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-vim\" */\n\nPrism.languages.vim = {\n  'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  'comment': /\".*/,\n  'function': /\\w+(?=\\()/,\n  'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  'punctuation': /[{}[\\](),;:]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nexport default Prism;","// @flow\r\n// Duotone Dark\r\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\r\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\r\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\r\n\r\n/*:: import type { PrismTheme } from '../src/types' */\r\n\r\nvar theme /*: PrismTheme */ = {\r\n  plain: {\r\n    backgroundColor: \"#2a2734\",\r\n    color: \"#9a86fd\"\r\n  },\r\n  styles: [\r\n    {\r\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\r\n      style: {\r\n        color: \"#6c6783\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"namespace\"],\r\n      style: {\r\n        opacity: 0.7\r\n      }\r\n    },\r\n    {\r\n      types: [\"tag\", \"operator\", \"number\"],\r\n      style: {\r\n        color: \"#e09142\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"property\", \"function\"],\r\n      style: {\r\n        color: \"#9a86fd\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\r\n      style: {\r\n        color: \"#eeebff\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"attr-name\"],\r\n      style: {\r\n        color: \"#c4b9fe\"\r\n      }\r\n    },\r\n    {\r\n      types: [\r\n        \"boolean\",\r\n        \"string\",\r\n        \"entity\",\r\n        \"url\",\r\n        \"attr-value\",\r\n        \"keyword\",\r\n        \"control\",\r\n        \"directive\",\r\n        \"unit\",\r\n        \"statement\",\r\n        \"regex\",\r\n        \"at-rule\",\r\n        \"placeholder\",\r\n        \"variable\"\r\n      ],\r\n      style: {\r\n        color: \"#ffcc99\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"deleted\"],\r\n      style: {\r\n        textDecorationLine: \"line-through\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"inserted\"],\r\n      style: {\r\n        textDecorationLine: \"underline\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"italic\"],\r\n      style: {\r\n        fontStyle: \"italic\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"important\", \"bold\"],\r\n      style: {\r\n        fontWeight: \"bold\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"important\"],\r\n      style: {\r\n        color: \"#c4b9fe\"\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nmodule.exports = theme;\r\n","import Prism from './vendor/prism';\nimport theme from '../themes/duotoneDark';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\nexport default defaultProps;","var newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = types[0] === token.type ? types : types.concat(token.type);\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var _i = 1; _i < newlineCount; _i++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[_i]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nexport default normalizeTokens;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var types = themeEntry.types,\n        languages = themeEntry.languages,\n        style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nexport default themeToDict;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport React, { Component } from \"react\";\nimport normalizeTokens from \"../utils/normalizeTokens\";\nimport themeToDict from \"../utils/themeToDict\";\n\nvar Highlight =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Highlight, _Component);\n\n  function Highlight(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.themeDict = void 0;\n\n    _this.getLineProps = function (_ref) {\n      var key = _ref.key,\n          className = _ref.className,\n          style = _ref.style,\n          line = _ref.line,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"key\", \"className\", \"style\", \"line\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      if (_this.themeDict !== undefined) {\n        output.style = _this.themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    _this.getStyleForToken = function (_ref2) {\n      var types = _ref2.types,\n          empty = _ref2.empty;\n      var typesSize = types.length;\n\n      if (_this.themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return _this.themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return _this.themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    };\n\n    _this.getTokenProps = function (_ref3) {\n      var key = _ref3.key,\n          className = _ref3.className,\n          style = _ref3.style,\n          token = _ref3.token,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"key\", \"className\", \"style\", \"token\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: _this.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    if (props.theme) {\n      _this.themeDict = themeToDict(props.theme, props.language);\n    }\n\n    return _this;\n  }\n\n  var _proto = Highlight.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Prism = _this$props.Prism,\n        language = _this$props.language,\n        code = _this$props.code,\n        children = _this$props.children;\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: this.themeDict ? this.themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;","import React from 'react'\nconst pretty = require('js-object-pretty-print').pretty\nimport Highlight, { defaultProps } from 'prism-react-renderer'\n\nconst Pretty = ({\n  data,\n  indentSize = 2,\n  outputTo = 'PRINT',\n  fullFunction = false\n}) => {\n  const format = pretty(data, indentSize, outputTo, fullFunction)\n\n  return (\n    <Highlight {...defaultProps} code={format} language=\"javascript\">\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style, width: '100%' }}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nexport default Pretty\n","import React from 'react'\nimport Pretty from './Pretty'\n\nconst Print = Pretty\n\nexport default Print\n"],"names":["Prism","theme","_extends","_objectWithoutPropertiesLoose","_inheritsLoose","Component","pretty","require","Pretty","data","indentSize","outputTo","fullFunction","format","React","defaultProps","className","style","tokens","getLineProps","getTokenProps","width","map","line","i","key","token","Print"],"mappings":"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"}