{"version":3,"file":"index.js","sources":["../../../node_modules/prism-react-renderer/es/vendor/prism/prism-core.js","../../../node_modules/prism-react-renderer/es/vendor/prism/index.js","../../../node_modules/prism-react-renderer/themes/duotoneDark.js","../../../node_modules/prism-react-renderer/es/defaultProps.js","../../../node_modules/prism-react-renderer/es/utils/normalizeTokens.js","../../../node_modules/prism-react-renderer/es/utils/themeToDict.js","../../../node_modules/prism-react-renderer/es/components/Highlight.js","../src/Pretty/index.js","../src/Print.js"],"sourcesContent":["/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Donâ€™t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\nmodule.exports = Prism;\nPrism.default = Prism;","import Prism from './prism-core';\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /(^|[^\\\\])[\"']/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  var insideString = {\n    variable: [// Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // Command Substitution\n    {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    'string': [//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'variable': insideString.variable,\n    // Originally based on http://ss64.com/bash/\n    'function': {\n      pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var inside = insideString.variable[1].inside;\n  inside.string = Prism.languages.bash.string;\n  inside['function'] = Prism.languages.bash['function'];\n  inside.keyword = Prism.languages.bash.keyword;\n  inside['boolean'] = Prism.languages.bash['boolean'];\n  inside.operator = Prism.languages.bash.operator;\n  inside.punctuation = Prism.languages.bash.punctuation;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /[a-z0-9_]+(?=\\()/i,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n  'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['class-name'];\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'operator': /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\nPrism.languages.insertBefore('cpp', 'keyword', {\n  'class-name': {\n    pattern: /(class\\s+)\\w+/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\nPrism.languages.css = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n  'atrule': {\n    pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n  'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n  'string': {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n  'important': /\\B!important\\b/i,\n  'function': /[-a-z0-9]+(?=\\()/i,\n  'punctuation': /[(){};:]/\n};\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'style': {\n      pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n      lookbehind: true,\n      inside: Prism.languages.css,\n      alias: 'language-css',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'style-attr': {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        'attr-name': {\n          pattern: /^\\s*style/i,\n          inside: Prism.languages.markup.tag.inside\n        },\n        'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        'attr-value': {\n          pattern: /.+/i,\n          inside: Prism.languages.css\n        }\n      },\n      alias: 'language-css'\n    }\n  }, Prism.languages.markup.tag);\n}\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  },\n  'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: null // See below\n\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {} else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': /\\[[^\\]]+\\]/\n  }\n};\nPrism.languages.insertBefore('css', 'function', {\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'number': /[\\d%.]+/\n});\n/* \"prismjs/components/prism-diff\" */\n\nPrism.languages.diff = {\n  'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n  /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n  /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n  /^\\d+.*$/m],\n  // Match inserted and deleted lines. Support both +/- and >/< styles.\n  'deleted': /^[-<].*$/m,\n  'inserted': /^[+>].*$/m,\n  // Match \"different\" lines (prefixed with \"!\") in context diff.\n  'diff': {\n    'pattern': /^!(?!!).+$/m,\n    'alias': 'important'\n  }\n};\n/* \"prismjs/components/prism-docker\" */\n\nPrism.languages.docker = {\n  'keyword': {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\n    lookbehind: true\n  },\n  'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  'comment': /#.*/,\n  'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n};\nPrism.languages.dockerfile = Prism.languages.docker;\n/* \"prismjs/components/prism-elixir\" */\n\nPrism.languages.elixir = {\n  'comment': {\n    pattern: /#.*/m,\n    lookbehind: true\n  },\n  // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n  'regex': {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: true\n  },\n  'string': [{\n    // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: true,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: true,\n    inside: {}\n  }, {\n    // Multi-line strings are allowed\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {}\n  }],\n  'atom': {\n    // Look-behind prevents bad highlighting of the :: operator\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  // Look-ahead prevents bad highlighting of the :: operator\n  'attr-name': /\\w+:(?!:)/,\n  'capture': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'argument': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'variable'\n  },\n  'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'operator': [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    // We don't want to match <<\n    pattern: /([^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /([^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n};\nPrism.languages.elixir.string.forEach(function (o) {\n  o.inside = {\n    'interpolation': {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        'delimiter': {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});\n/* \"prismjs/components/prism-erlang\" */\n\nPrism.languages.erlang = {\n  'comment': /%.+/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'quoted-function': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: 'function'\n  },\n  'quoted-atom': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: 'atom'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  'number': [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  'function': /\\b[a-z][\\w@]*(?=\\()/,\n  'variable': {\n    // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: true\n  },\n  'operator': [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'atom': /\\b[a-z][\\w@]*/,\n  'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n};\n/* \"prismjs/components/prism-git\" */\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-â€“].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n  'keyword': [{\n    pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n    lookbehind: true\n  }, /\\b(?:query|fragment|mutation)\\b/],\n  'operator': /!|=|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\nPrism.languages['markup-templating'] = {};\nObject.defineProperties(Prism.languages['markup-templating'], {\n  buildPlaceholders: {\n    // Tokenize all inline templating expressions matching placeholderPattern\n    // If the replaceFilter function is provided, it will be called with every match.\n    // If it returns false, the match will not be replaced.\n    value: function value(env, language, placeholderPattern, replaceFilter) {\n      if (env.language !== language) {\n        return;\n      }\n\n      env.tokenStack = [];\n      env.code = env.code.replace(placeholderPattern, function (match) {\n        if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n          return match;\n        }\n\n        var i = env.tokenStack.length; // Check for existing strings\n\n        while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n          ++i;\n        } // Create a sparse array\n\n\n        env.tokenStack[i] = match;\n        return '___' + language.toUpperCase() + i + '___';\n      }); // Switch the grammar to markup\n\n      env.grammar = Prism.languages.markup;\n    }\n  },\n  tokenizePlaceholders: {\n    // Replace placeholders with proper tokens after tokenizing\n    value: function value(env, language) {\n      if (env.language !== language || !env.tokenStack) {\n        return;\n      } // Switch the grammar back\n\n\n      env.grammar = Prism.languages[language];\n      var j = 0;\n      var keys = Object.keys(env.tokenStack);\n\n      var walkTokens = function walkTokens(tokens) {\n        if (j >= keys.length) {\n          return;\n        }\n\n        for (var i = 0; i < tokens.length; i++) {\n          var token = tokens[i];\n\n          if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n            var k = keys[j];\n            var t = env.tokenStack[k];\n            var s = typeof token === 'string' ? token : token.content;\n            var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n\n            if (index > -1) {\n              ++j;\n              var before = s.substring(0, index);\n              var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n              var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n              var replacement;\n\n              if (before || after) {\n                replacement = [before, middle, after].filter(function (v) {\n                  return !!v;\n                });\n                walkTokens(replacement);\n              } else {\n                replacement = middle;\n              }\n\n              if (typeof token === 'string') {\n                Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n              } else {\n                token.content = replacement;\n              }\n\n              if (j >= keys.length) {\n                break;\n              }\n            }\n          } else if (token.content && typeof token.content !== 'string') {\n            walkTokens(token.content);\n          }\n        }\n      };\n\n      walkTokens(env.tokens);\n    }\n  }\n});\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-haskell\" */\n\n\nPrism.languages.haskell = {\n  'comment': {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: true\n  },\n  'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  'import_statement': {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: true,\n    inside: {\n      'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  // decimal integers and floating point numbers | octal integers | hexadecimal integers\n  'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  'operator': /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  // In Haskell, nearly everything is a variable, do not highlight these.\n  'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-java\" */\n\nPrism.languages.java = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n  'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'function', {\n  'annotation': {\n    alias: 'punctuation',\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'class-name', {\n  'generics': {\n    pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n    alias: 'function',\n    inside: {\n      keyword: Prism.languages.java.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  }\n});\n/* \"prismjs/components/prism-json\" */\n\nPrism.languages.json = {\n  'property': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  'punctuation': /[{}[\\]);,]/,\n  'operator': /:/g,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'null': /\\bnull\\b/i\n};\nPrism.languages.jsonp = Prism.languages.json;\n/* \"prismjs/components/prism-latex\" */\n\n(function (Prism) {\n  var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      insideEqu = {\n    'equation-command': {\n      pattern: funcPattern,\n      alias: 'regex'\n    }\n  };\n  Prism.languages.latex = {\n    'comment': /%.*/m,\n    // the verbatim environment prints whitespace to the document\n    'cdata': {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * equations can be between $ $ or \\( \\) or \\[ \\]\n     * (all are multiline)\n     */\n    'equation': [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: insideEqu,\n      alias: 'string'\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true,\n      inside: insideEqu,\n      alias: 'string'\n    }],\n\n    /*\n     * arguments which are keywords or references are highlighted\n     * as keywords\n     */\n    'keyword': {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * section or chapter headlines are highlighted as bold so that\n     * they stand out more\n     */\n    'headline': {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function': {\n      pattern: funcPattern,\n      alias: 'selector'\n    },\n    'punctuation': /[[\\]{}&]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'punctuation': /[{}();:,]/,\n  'operator': /[+\\-*\\/]/\n}); // Invert function and punctuation positions\n\nPrism.languages.insertBefore('less', 'punctuation', {\n  'function': Prism.languages.less.function\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\nPrism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n  'blockquote': {\n    // > ...\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: 'punctuation'\n  },\n  'code': [{\n    // Prefixed by 4 spaces or 1 tab\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: 'keyword'\n  }, {\n    // `code`\n    // ``code``\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: 'keyword'\n  }],\n  'title': [{\n    // title 1\n    // =======\n    // title 2\n    // -------\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: 'important',\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    // # title 1\n    // ###### title 6\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: true,\n    alias: 'important',\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  'hr': {\n    // ***\n    // ---\n    // * * *\n    // -----------\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'list': {\n    // * item\n    // + item\n    // - item\n    // 1. item\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'url-reference': {\n    // [id]: http://example.com \"Optional title\"\n    // [id]: http://example.com 'Optional title'\n    // [id]: http://example.com (Optional title)\n    // [id]: <http://example.com> \"Optional title\"\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      'variable': {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: true\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      'punctuation': /^[\\[\\]!:]|[<>]/\n    },\n    alias: 'url'\n  },\n  'bold': {\n    // **strong**\n    // __strong__\n    // Allow only one line break\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  'italic': {\n    // *em*\n    // _em_\n    // Allow only one line break\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^[*_]|[*_]$/\n    }\n  },\n  'url': {\n    // [example](http://example.com \"Optional title\")\n    // [example] [id]\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      'variable': {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: true\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown['bold'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['italic'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['bold'].inside['italic'] = Prism.languages.markdown['italic'];\nPrism.languages.markdown['italic'].inside['bold'] = Prism.languages.markdown['bold'];\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n    'constant': /\\b[A-Z0-9_]{2,}\\b/,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'delimiter': {\n      pattern: /\\?>|<\\?(?:php|=)?/i,\n      alias: 'important'\n    },\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': null // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': null // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.php['heredoc-string'].inside['interpolation'] = string_interpolation;\n  Prism.languages.php['double-quoted-string'].inside['interpolation'] = string_interpolation;\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/(?:<\\?php|<\\?)/ig.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-php-extras\" */\n\n\nPrism.languages.insertBefore('php', 'variable', {\n  'this': /\\$this\\b/,\n  'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  'scope': {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n});\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'triple-quoted-string': {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-ruby\" */\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n * \t\tconstant, builtin, variable, symbol, regex\n */\n\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': [/#.*/, {\n      pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n      greedy: true\n    }],\n    'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'tag'\n      },\n      rest: Prism.languages.ruby\n    }\n  };\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex': [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  });\n  Prism.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    // Here we need to specifically allow interpolation\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }];\n})(Prism);\n/* \"prismjs/components/prism-rust\" */\n\n/* TODO\n\tAdd support for Markdown notation inside doc comments\n\tAdd support for nested block comments...\n\tMatch closure params even when not followed by dash or brace\n\tAdd better support for macro definition\n*/\n\n\nPrism.languages.rust = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: true\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }],\n  'char': {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: 'string'\n  },\n  'lifetime-annotation': {\n    pattern: /'[^\\s>']+/,\n    alias: 'symbol'\n  },\n  'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  'attribute': {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: true,\n    alias: 'attr-name'\n  },\n  'function': [/\\w+(?=\\s*\\()/, // Macros can use parens or brackets\n  /\\w+!(?=\\s*\\(|\\[)/],\n  'macro-rules': {\n    pattern: /\\w+!/,\n    alias: 'function'\n  },\n  // Hex, oct, bin, dec numbers with visual separators and type suffix\n  'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  // Closure params should not be confused with bitwise OR |\n  'closure-params': {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      'punctuation': /[|:,]/,\n      'operator': /[&*]/\n    }\n  },\n  'punctuation': /[{}[\\];(),:]|\\.+|->/,\n  'operator': /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  delete Prism.languages.sass.selector;\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)*url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.scss.property = {\n  pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n  inside: {\n    'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  }\n};\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': /\\bnull\\b/,\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'variable': /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-swift\" */\n// issues: nested multiline comments\n\n\nPrism.languages.swift = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n});\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-vim\" */\n\nPrism.languages.vim = {\n  'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  'comment': /\".*/,\n  'function': /\\w+(?=\\()/,\n  'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  'punctuation': /[{}[\\](),;:]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nexport default Prism;","// @flow\r\n// Duotone Dark\r\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\r\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\r\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\r\n\r\n/*:: import type { PrismTheme } from '../src/types' */\r\n\r\nvar theme /*: PrismTheme */ = {\r\n  plain: {\r\n    backgroundColor: \"#2a2734\",\r\n    color: \"#9a86fd\"\r\n  },\r\n  styles: [\r\n    {\r\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\r\n      style: {\r\n        color: \"#6c6783\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"namespace\"],\r\n      style: {\r\n        opacity: 0.7\r\n      }\r\n    },\r\n    {\r\n      types: [\"tag\", \"operator\", \"number\"],\r\n      style: {\r\n        color: \"#e09142\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"property\", \"function\"],\r\n      style: {\r\n        color: \"#9a86fd\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\r\n      style: {\r\n        color: \"#eeebff\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"attr-name\"],\r\n      style: {\r\n        color: \"#c4b9fe\"\r\n      }\r\n    },\r\n    {\r\n      types: [\r\n        \"boolean\",\r\n        \"string\",\r\n        \"entity\",\r\n        \"url\",\r\n        \"attr-value\",\r\n        \"keyword\",\r\n        \"control\",\r\n        \"directive\",\r\n        \"unit\",\r\n        \"statement\",\r\n        \"regex\",\r\n        \"at-rule\",\r\n        \"placeholder\",\r\n        \"variable\"\r\n      ],\r\n      style: {\r\n        color: \"#ffcc99\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"deleted\"],\r\n      style: {\r\n        textDecorationLine: \"line-through\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"inserted\"],\r\n      style: {\r\n        textDecorationLine: \"underline\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"italic\"],\r\n      style: {\r\n        fontStyle: \"italic\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"important\", \"bold\"],\r\n      style: {\r\n        fontWeight: \"bold\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"important\"],\r\n      style: {\r\n        color: \"#c4b9fe\"\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nmodule.exports = theme;\r\n","import Prism from './vendor/prism';\nimport theme from '../themes/duotoneDark';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\nexport default defaultProps;","var newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = types[0] === token.type ? types : types.concat(token.type);\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var _i = 1; _i < newlineCount; _i++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[_i]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nexport default normalizeTokens;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain;\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var types = themeEntry.types,\n        languages = themeEntry.languages,\n        style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, {}); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nexport default themeToDict;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport React, { Component } from \"react\";\nimport normalizeTokens from \"../utils/normalizeTokens\";\nimport themeToDict from \"../utils/themeToDict\";\n\nvar Highlight =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Highlight, _Component);\n\n  function Highlight(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.themeDict = void 0;\n\n    _this.getLineProps = function (_ref) {\n      var key = _ref.key,\n          className = _ref.className,\n          style = _ref.style,\n          line = _ref.line,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"key\", \"className\", \"style\", \"line\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      if (_this.themeDict !== undefined) {\n        output.style = _this.themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    _this.getStyleForToken = function (_ref2) {\n      var types = _ref2.types,\n          empty = _ref2.empty;\n      var typesSize = types.length;\n\n      if (_this.themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return _this.themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return _this.themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    };\n\n    _this.getTokenProps = function (_ref3) {\n      var key = _ref3.key,\n          className = _ref3.className,\n          style = _ref3.style,\n          token = _ref3.token,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"key\", \"className\", \"style\", \"token\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: _this.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    if (props.theme) {\n      _this.themeDict = themeToDict(props.theme, props.language);\n    }\n\n    return _this;\n  }\n\n  var _proto = Highlight.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Prism = _this$props.Prism,\n        language = _this$props.language,\n        code = _this$props.code,\n        children = _this$props.children;\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: this.themeDict ? this.themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;","import React from 'react'\nconst pretty = require('js-object-pretty-print').pretty\nimport Highlight, { defaultProps } from 'prism-react-renderer'\n\nconst Pretty = ({\n  data,\n  indentSize = 2,\n  outputTo = 'PRINT',\n  fullFunction = false\n}) => {\n  const format = pretty(data, indentSize, outputTo, fullFunction)\n\n  return (\n    <Highlight {...defaultProps} code={format} language=\"javascript\">\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style, width: '100%' }}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nexport default Pretty\n","import React from 'react'\nimport Pretty from './Pretty'\n\nconst Print = Pretty\n\nexport default Print\n"],"names":["Prism","uniqueId","_","util","encode","tokens","Token","type","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","defineProperty","value","clone","visited","key","hasOwnProperty","forEach","v","i","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","slice","after","args","push","wrapped","Array","splice","apply","hooks","add","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","name","module","default","markup","xml","html","mathml","svg","insideString","variable","number","operator","punctuation","bash","string","keyword","shell","clike","c","cpp","css","javascript","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","tagName","pop","openedBraces","plainText","comment","interpolation","coffeescript","actionscript","selector","diff","docker","dockerfile","elixir","erlang","git","go","graphql","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","indexOf","toUpperCase","tokenizePlaceholders","t","s","substring","middle","replacement","filter","concat","handlebars","handlebarsPattern","haskell","java","json","jsonp","funcPattern","insideEqu","latex","less","function","makefile","markdown","objectivec","ocaml","php","string_interpolation","test","phpPattern","python","reason","ruby","rust","sass","atrule","important","property","scss","sql","stylus","func","swift","delimiter","typescript","ts","vim","yaml","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","defaultProps","newlineRe","normalizeEmptyLines","line","empty","normalizeTokens","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","acc","tokenArr","splitByNewlines","split","newlineCount","_i","_extends","assign","themeToDict","themeDict","reduce","themeEntry","includes","accStyle","_objectWithoutPropertiesLoose","excluded","sourceKeys","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Highlight","_Component","props","_this","getLineProps","_ref","className","output","undefined","getStyleForToken","_ref2","typesSize","display","baseStyle","typeStyles","getTokenProps","_ref3","children","_proto","render","_this$props","mixedTokens","Component","pretty","require","Pretty","data","indentSize","outputTo","fullFunction","format","React","width","Print"],"mappings":"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"}